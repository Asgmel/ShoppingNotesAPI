// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingNotes.Data;

#nullable disable

namespace ShoppingNotes.Migrations
{
    [DbContext(typeof(SQLDbContext))]
    [Migration("20221114113710_user object changes, password added")]
    partial class userobjectchangespasswordadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("ShoppingNotes.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SListId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("ShoppingNotes.Models.SList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("ShoppingNotes.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShoppingNotes.Models.Note", b =>
                {
                    b.HasOne("ShoppingNotes.Models.SList", "SList")
                        .WithMany("Notes")
                        .HasForeignKey("SListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SList");
                });

            modelBuilder.Entity("ShoppingNotes.Models.SList", b =>
                {
                    b.HasOne("ShoppingNotes.Models.User", "User")
                        .WithMany("SLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShoppingNotes.Models.SList", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("ShoppingNotes.Models.User", b =>
                {
                    b.Navigation("SLists");
                });
#pragma warning restore 612, 618
        }
    }
}
